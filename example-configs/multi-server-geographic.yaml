# Geographic Multi-Region Configuration Example
# This configuration demonstrates backing up databases across multiple geographic regions

# Database servers in different regions
database_servers:
  # US East Region
  - name: "us-east-primary"
    type: "mysql"
    host: "db-primary.us-east-1.internal"
    port: "3306"
    username: "backup_user"
    password: "${US_EAST_BACKUP_PASSWORD}"
    auth_plugin: "caching_sha2_password"
    ssl_ca: "/etc/ssl/certs/us-east-ca.pem"
    exclude_databases:
      - "test_*"
      - "tmp_*"
    mysql_dump_options:
      single_transaction: true
      compress: true  # Compress for cross-region transfer
      routines: true

  - name: "us-east-replica"
    type: "mysql"
    host: "db-replica.us-east-1.internal"
    port: "3306"
    username: "backup_user"
    password: "${US_EAST_BACKUP_PASSWORD}"
    auth_plugin: "caching_sha2_password"
    ssl_ca: "/etc/ssl/certs/us-east-ca.pem"
    exclude_databases:
      - "test_*"
      - "tmp_*"
    mysql_dump_options:
      single_transaction: true
      compress: true

  # EU West Region
  - name: "eu-west-primary"
    type: "mysql"
    host: "db-primary.eu-west-1.internal"
    port: "3306"
    username: "backup_user"
    password: "${EU_WEST_BACKUP_PASSWORD}"
    auth_plugin: "caching_sha2_password"
    ssl_ca: "/etc/ssl/certs/eu-west-ca.pem"
    exclude_databases:
      - "test_*"
    mysql_dump_options:
      single_transaction: true
      compress: true
      routines: true

  # Asia Pacific Region
  - name: "ap-southeast-primary"
    type: "mysql"
    host: "db-primary.ap-southeast-1.internal"
    port: "3306"
    username: "backup_user"
    password: "${AP_SOUTHEAST_BACKUP_PASSWORD}"
    auth_plugin: "caching_sha2_password"
    ssl_ca: "/etc/ssl/certs/ap-southeast-ca.pem"
    exclude_databases:
      - "test_*"
    mysql_dump_options:
      single_transaction: true
      compress: true
      routines: true

# Organize by server to separate regions
backup_organization: "by-server"

# Local storage (region-specific mount)
local:
  enabled: true
  backup_directory: "/mnt/region-backups"

# Multi-region S3 configuration
s3:
  enabled: true
  # Use regional endpoints for better performance
  regions:
    us-east:
      endpoint: "https://s3.us-east-1.amazonaws.com"
      region: "us-east-1"
      bucket: "backups-us-east-1"
      storage_class: "STANDARD_IA"  # Infrequent access for cost savings
    eu-west:
      endpoint: "https://s3.eu-west-1.amazonaws.com"
      region: "eu-west-1"
      bucket: "backups-eu-west-1"
      storage_class: "STANDARD_IA"
    ap-southeast:
      endpoint: "https://s3.ap-southeast-1.amazonaws.com"
      region: "ap-southeast-1"
      bucket: "backups-ap-southeast-1"
      storage_class: "STANDARD_IA"
  
  # Global credentials (or use IAM roles)
  access_key: "${AWS_ACCESS_KEY_ID}"
  secret_key: "${AWS_SECRET_ACCESS_KEY}"
  
  # Cross-region replication handled by S3
  enable_cross_region_replication: true

# Backup types with region considerations
backup_types:
  # Frequent backups kept locally
  hourly:
    local:
      enabled: true
      retention:
        count: 24
    s3:
      enabled: false  # Don't upload hourly to S3 (cost optimization)
    mysql_dump_options:
      quick: true
      single_transaction: true

  # Daily backups to regional S3
  daily:
    local:
      enabled: true
      retention:
        count: 7
    s3:
      enabled: true
      retention:
        duration: "30d"
      upload_to_region: true  # Upload to region-specific bucket
    mysql_dump_options:
      single_transaction: true
      routines: true
      compress: true

  # Weekly backups with cross-region replication
  weekly:
    local:
      enabled: true
      retention:
        count: 4
    s3:
      enabled: true
      retention:
        duration: "90d"
      upload_to_region: true
      replicate_to_regions:  # S3 cross-region replication
        - "us-west-2"  # Disaster recovery region
    mysql_dump_options:
      single_transaction: true
      routines: true
      events: true
      triggers: true
      compress: true

# Region-aware backup schedules (times in UTC)
backup_schedules:
  # US East - backup during low traffic (2-4 AM EST = 7-9 AM UTC)
  us_east_hourly:
    schedule: "0 * * * *"
    servers:
      - "us-east-replica"  # Use replica to avoid impacting primary
    type: "hourly"

  us_east_daily:
    schedule: "0 7 * * *"  # 2 AM EST
    servers:
      - "us-east-primary"
      - "us-east-replica"
    type: "daily"

  # EU West - backup during low traffic (2-4 AM CET = 1-3 AM UTC)
  eu_west_hourly:
    schedule: "0 * * * *"
    servers:
      - "eu-west-primary"
    type: "hourly"

  eu_west_daily:
    schedule: "0 1 * * *"  # 2 AM CET
    servers:
      - "eu-west-primary"
    type: "daily"

  # Asia Pacific - backup during low traffic (2-4 AM SGT = 18-20 PM UTC previous day)
  ap_southeast_hourly:
    schedule: "0 * * * *"
    servers:
      - "ap-southeast-primary"
    type: "hourly"

  ap_southeast_daily:
    schedule: "0 18 * * *"  # 2 AM SGT (next day)
    servers:
      - "ap-southeast-primary"
    type: "daily"

  # Global weekly backup on Sunday (staggered by region)
  global_weekly:
    schedule: "0 10 * * 0"  # 10 AM UTC Sunday
    servers:
      - "us-east-primary"
      - "eu-west-primary"
      - "ap-southeast-primary"
    type: "weekly"

# Performance settings for cross-region operations
performance:
  max_concurrent_backups: 3  # One per region
  compression_level: 9  # Maximum compression for cross-region transfers
  network_timeout: "300s"  # Longer timeout for cross-region
  retry_attempts: 5  # More retries for network issues
  retry_delay: "30s"

# Metadata database (centralized)
metadata_database:
  enabled: true
  host: "metadata-db.us-east-1.internal"  # Primary region
  port: 3306
  database: "gosqlguard_global"
  username: "metadata_user"
  password: "${METADATA_PASSWORD}"
  auto_migrate: true
  # Connection settings for cross-region access
  max_open_conns: 10
  max_idle_conns: 5
  conn_max_lifetime: "10m"
  ssl_mode: "REQUIRED"

# Regional admin interfaces
admin:
  enabled: true
  port: "8080"
  # Bind to regional IPs
  bind_addresses:
    us-east: "10.1.0.10"
    eu-west: "10.2.0.10"
    ap-southeast: "10.3.0.10"

# Metrics with region labels
metrics:
  enabled: true
  port: "9090"
  labels:
    environment: "production"
    deployment: "global"

# Logging with region identification
logging:
  level: "info"
  format: "json"
  output: "/var/log/gosqlguard/regional.log"
  fields:
    region: "${AWS_REGION}"
    availability_zone: "${AWS_AVAILABILITY_ZONE}"

# Health checks with region-specific endpoints
health_check:
  enabled: true
  interval: "5m"
  endpoints:
    - "http://health.us-east-1.internal/status"
    - "http://health.eu-west-1.internal/status"
    - "http://health.ap-southeast-1.internal/status"